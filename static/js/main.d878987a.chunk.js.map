{"version":3,"sources":["components/Nav.js","components/firebase.js","components/Prestamo.js","components/Balance.js","components/Inicio.js","components/Afterprestamo.js","components/Routes.js","index.js"],"names":["Nav","class","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","Prestamo","props","currentUser","useState","nombre","setUsuario","cantidad","setCantidad","descripcion","setDescripcion","onAuthStateChanged","user","uid","history","useHistory","onSubmit","e","a","preventDefault","console","log","location","aboutProps","name","washingtonRef","doc","updateDoc","IdAlumno","FechaFin","FechaPrestamo","disponibilidad","Estado","push","for","type","id","placeholder","value","onChange","target","selected","date","dateFormat","isClearable","showYearDropdown","scrollableMonthYearDropdown","Balance","data","setData","usersCollectionRef","collection","useEffect","getUsers","getDocs","docs","map","docid","setDocid","actualizar","regresar","today","Date","getFullYear","getMonth","getDate","scope","xmlns","width","height","fill","viewBox","d","toLocaleDateString","onMouseOver","onClick","to","pathname","Inicio","After","className","Ruta","path","exact","component","miJSX","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d878987a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Nav = () =>{\r\n   \r\n\r\n\r\n    return (\r\n        \r\n\r\n        <>\r\n            <nav class=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\r\n            \r\n            <h2 class=\"text-light bg-dark\">Prestamos App</h2>\r\n            </nav>\r\n           \r\n        </>\r\n    );\r\n    \r\n};\r\nexport default Nav;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore} from \"firebase/firestore\";\r\nimport {getAuth} from \"firebase/auth\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAtwCytvdJ63HDmRGK70gzDPrGtqq7LJWg\",\r\n    authDomain: \"iberofinantial.firebaseapp.com\",\r\n    projectId: \"iberofinantial\",\r\n    storageBucket: \"iberofinantial.appspot.com\",\r\n    messagingSenderId: \"104158522674\",\r\n    appId: \"1:104158522674:web:c4627963832bea064bfb2b\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);","\r\n\r\nimport Nav from \"./Nav\";\r\nimport React,{useState} from \"react\";\r\nimport {db,auth} from \"./firebase\";\r\nimport {query, where, } from \"firebase/firestore\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { collection, addDoc,doc,updateDoc } from \"firebase/firestore\";\r\nimport  { useHistory } from 'react-router-dom'\r\nimport {  setDoc } from \"firebase/firestore\";\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nconst Prestamo = (props) =>\r\n{\r\n    const user = auth.currentUser;\r\n    const [nombre, setUsuario] = useState(\"\");\r\n    const [cantidad, setCantidad] = useState(null);\r\n    const [descripcion, setDescripcion] = useState(null);\r\n    //const user = auth.currentUser.uid;\r\n      \r\n    onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          // User is signed in, see docs for a list of available properties\r\n          // https://firebase.google.com/docs/reference/js/firebase.User\r\n          const uid = user.uid;\r\n          // ...\r\n        } else {\r\n          // User is signed out\r\n          // ...\r\n        }\r\n      });\r\nconst onChange = (e) => {\r\n\t\tif(e.target.name === \"nombre\"){\r\n      \r\n\t\t\tsetUsuario(e.target.value);\t\t\r\n\t\t}else if (e.target.name === \"cantidad\"){\r\n      console.log(e.target.value)\r\n\t\tsetCantidad(e.target.value);\r\n\t\t}else if (e.target.name === \"descripcion\"){\r\n        setDescripcion(e.target.value);\r\n        }\r\n\t\r\n};\r\n\r\nlet history= useHistory();\r\n\r\nconst onSubmit  = async (e) =>{\r\ne.preventDefault();\r\nconsole.log(props.location.aboutProps.name)\r\nconst washingtonRef = doc(db, \"Libros\", props.location.aboutProps.name);\r\n\r\n     // Set the \"capital\" field of the city 'DC'\r\n     await updateDoc(washingtonRef, {\r\n      IdAlumno: nombre,\r\n      FechaFin: cantidad,\r\n      FechaPrestamo:descripcion,\r\n      disponibilidad:\"True\",\r\n      Estado:\"Prestado chaval\"\r\n\r\n     });\r\n     console.log(props.location.aboutProps.name)\r\n\r\n     history.push('/')\r\n//props.setSession(true);\r\n\r\n}\r\n\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n\r\n            <h1>Nuevo Prestamo</h1>\r\n            <form onSubmit={onSubmit}>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"formGroupExampleInput\">ID del Alumno</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"Example input\" value={nombre} name=\"nombre\" onChange={onChange}></input>\r\n                   \r\n                </div>\r\n                <div class=\"form-group\">\r\n                    \r\n                    <label for=\"start\">Start date:</label>\r\n\r\n                    <DatePicker \r\n                    selected= {cantidad}\r\n                    onChange={date=>setCantidad(date)}\r\n                    dateFormat='dd/MM/yyyy'\r\n                    isClearable\r\n                    showYearDropdown\r\n                    scrollableMonthYearDropdown\r\n                    \r\n                    />\r\n                   \r\n                </div>\r\n                <div class=\"form-group\">\r\n                <label for=\"start\">End date:</label>\r\n\r\n                <DatePicker \r\n                    selected= {descripcion}\r\n                    onChange={date=>setDescripcion(date)}\r\n                    dateFormat='dd/MM/yyyy'\r\n                    isClearable\r\n                    showYearDropdown\r\n                    scrollableMonthYearDropdown\r\n                    \r\n                    />\r\n                   \r\n                   \r\n                </div>\r\n                \r\n                <button type=\"submit\" class=\"btn btn-primary\" >Guardar</button>\r\n        </form>\r\n        </>\r\n    );\r\n    \r\n};\r\nexport default Prestamo;","\r\nimport Nav from \"./Nav\";\r\nimport {updateDoc,query, where,doc,deleteDoc, onSnapshot , collection, getDocs } from \"firebase/firestore\";\r\nimport { db , auth} from \"./firebase\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport  { useHistory } from 'react-router-dom'\r\nconst Balance = () =>\r\n\r\n\r\n{\r\n  let history= useHistory();\r\n\r\n  const user = auth.currentUser;\r\n\r\n  const [data, setData] = useState([]);\r\n  \r\n  const usersCollectionRef =collection(db, \"Libros\") ;\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      const data = await getDocs(usersCollectionRef);\r\n      setData(data.docs.map((doc) => ({ ...doc.data()})));\r\n      \r\n    };\r\n //console.log(new Date(data[0].FechaFin * 1000).toLocaleDateString(\"en-US\"))\r\n    getUsers();\r\n  }, []);\r\n\r\n\r\n  const borrar = async (e) =>{\r\n   // console.log(e.target.name)\r\n   \r\n    \r\n     \r\n    console.log(docid)\r\n   \r\n      await deleteDoc(doc(db, \"gastos\", docid));\r\n      document.getElementById(docid).style.display = \"none\";\r\n  }\r\n\r\n\r\n\r\n  const [docid, setDocid] = useState(\"\");\r\n  const actualizar = (e) =>{\r\n    setDocid(e.target.name)\r\n    console.log(docid)\r\n  }\r\n  const regresar = async (e) =>{\r\n    // console.log(e.target.name)\r\n    \r\n  \r\n    var today = new Date();\r\n    var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n      \r\n     console.log(docid)\r\n    \r\n     const washingtonRef = doc(db, \"Libros\", docid);\r\n\r\n     // Set the \"capital\" field of the city 'DC'\r\n     await updateDoc(washingtonRef, {\r\n       disponibilidad: \"False\",\r\n       Estado: \"libre para prestamo\"\r\n\r\n     });\r\n\r\n     history.push('/after')\r\n   }\r\n   //c\r\n  //console.log(docid)\r\n\r\n//console.log(data)\r\n  \r\n// data should now be set and ready to be used in your components\r\n \r\n\r\n \r\n    \r\n    return (\r\n        <>\r\n      <h1 >Datos Financieros</h1>\r\n      <br>\r\n      </br>\r\n      <table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n    <h3>  Libros de la librería </h3>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    \r\n      \r\n  {data.map((data) => (\r\n      \r\n        <>\r\n        \r\n    <tr id={data.docid}>\r\n      <th scope=\"row\">  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-all\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M8.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L2.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093L8.95 4.992a.252.252 0 0 1 .02-.022zm-.92 5.14.92.92a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 1 0-1.091-1.028L9.477 9.417l-.485-.486-.943 1.179z\"/>\r\n</svg>\r\n      </th>\r\n      <th>{data.nombre}</th>\r\n      \r\n      <th>{data.Estado}</th>\r\n      <>\r\n      { data.disponibilidad === \"True\" ?\r\n      (<>\r\n      <th>{new Date(data.FechaFin * 1000).toLocaleDateString(\"en-US\")\r\n}</th>\r\n      <th>{new Date(data.FechaPrestamo * 1000).toLocaleDateString(\"en-US\")\r\n}</th>\r\n      <th>{data.IdAlumno}</th>\r\n\r\n      <th ><button name={data.docid} onMouseOver={actualizar} onClick={regresar}>Regresar</button></th>\r\n\r\n      </>):(\r\n        <>\r\n         <th><Link to={\r\n          {\r\n              pathname:'/prestamos',\r\n              aboutProps:{\r\n                  name :data.docid\r\n\r\n              }\r\n          }\r\n\r\n      }>Prestar</Link></th>\r\n        </>\r\n      )\r\n\r\n      }\r\n\r\n      </>\r\n     \r\n      \r\n    </tr>\r\n\r\n        </>\r\n      ))}\r\n    \r\n    \r\n    \r\n  </tbody>\r\n  </table>\r\n \r\n        </>\r\n    );\r\n    \r\n};\r\nexport default Balance;","import React,{useState} from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport Nav from \"./Nav\";\r\nimport Balance from \"./Balance\";\r\nimport { auth } from \"./firebase\";\r\nconst Inicio = () =>\r\n{\r\n    return ( <>\r\n             <Nav />\r\n\r\n            <Balance />\r\n                            \r\n             </>\r\n    );\r\n    \r\n};\r\nexport default Inicio;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst After = () =>{\r\n   \r\n\r\n\r\n    return (\r\n        \r\n\r\n        <>\r\n            <nav class=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\r\n            \r\n            <h2 class=\"text-light bg-dark\">Libro regresado</h2>\r\n            </nav>\r\n            \r\n            <Link className=\"navbar-brand\" to=\"/\">Regresar</Link>\r\n           \r\n        </>\r\n    );\r\n    \r\n};\r\nexport default After;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport Prestamo from \"./Prestamo.js\";\r\nimport Inicio from \"./Inicio.js\";\r\nimport After from \"./Afterprestamo.js\";\r\n\r\nconst Ruta = () =>\r\n{\r\n    return (\r\n        <>\r\n<Router>\r\n\t<Route path=\"/\" exact component={Inicio} />\r\n    <Route path=\"/prestamos\" component={Prestamo} />\r\n    <Route path=\"/after\" component={After} />\r\n   \r\n</Router>\r\n</>\r\n        \r\n    );\r\n    \r\n};\r\nexport default Ruta;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport Ruta from \"./components/Routes\";\n\n\n\n\nconst miJSX = (\n  \n\n  <>\n    <Ruta />\n \n    \n  </>\n\n\n);\nReactDOM.render(miJSX, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}